// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id             String         @id @default(uuid())
  number         String
  password       String
  role           Role
  Token          Token?
  createdAt      DateTime       @default(now())
  extend         DateTime       @default(now())
  active         Boolean        @default(true)
  online         Boolean
  unreadMessages Int            @default(0)
  userMessages   userMessages[]
  messages       messages[]
}

model messages {
  id           String         @id @default(uuid())
  type         messageType
  messageBody  String         @db.Text
  mediaUrl     String?        @db.Text
  createdAt    DateTime       @default(now()) @db.Timestamp(2)
  userMessages userMessages[]
  message      replay[]       @relation("replayMessage")

  replay replay[] @relation("originMessage")
  user   user     @relation(fields: [userId], references: [id])
  userId String
}

model replay {
  id         String       @id @default(uuid())
  replayId   String
  Replay     messages     @relation(name: "originMessage", fields: [replayId], references: [id])
  messages   messages     @relation(name: "replayMessage", fields: [messagesId], references: [id])
  messagesId String
  replayType messageType?
}

model userMessages {
  id         String   @id @default(uuid())
  user       user     @relation(fields: [userId], references: [id])
  userId     String
  read       Boolean
  messages   messages @relation(fields: [messagesId], references: [id])
  messagesId String
  createdAt  DateTime @default(now()) @db.Timestamp(2)
}

model Token {
  id     String @id @default(uuid())
  userId String @unique
  user   user   @relation(fields: [userId], references: [id])
}

model defaultPasswords {
  id                     String @id @default(uuid())
  rootPassword           String
  userPassword           String
  notHashingUserPassword String
  notHashingRootPassword String
}

enum Role {
  USER
  ADMIN
}

enum messageType {
  TEXT
  VOICE
  MEDIA
  DELETED
}
